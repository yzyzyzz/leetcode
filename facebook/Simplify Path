Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"
click to show corner cases.

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".


public class Solution {
    public String simplifyPath(String path) {
        Stack<String> stack = new Stack<String>();
        String[] pathChar = path.split("/");
        for(String s : pathChar)
        {
            switch(s) 
            {
                case ".":   continue;
                case "":    break;
                case "..":  if(!stack.isEmpty()) stack.pop();
                            break;
                default:    stack.push(s);
            }
        }
        StringBuilder sb = new StringBuilder();
        if(stack.isEmpty()) return "/";
        while(!stack.isEmpty()) sb.insert(0, "/" + stack.pop());
        return sb.toString();
    }
}

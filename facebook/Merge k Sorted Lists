Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

// 3.5
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length == 0) return null;
        //min heap
        PriorityQueue<ListNode> pq=new PriorityQueue<ListNode>(11,new Comparator<ListNode>(){
            public int compare(ListNode l1,ListNode l2){
                return l1.val-l2.val;
            }
        });
        ListNode dummy = new ListNode(0);
        for(int i=0;i<lists.length;i++) {
            if(lists[i]!=null) pq.add(lists[i]);
        }
        ListNode node = dummy;
        while(pq.peek()!=null) {
            node.next = pq.poll();
            node = node.next;
            if(node.next != null) pq.add(node.next);
        }
        return dummy.next;
    }
}

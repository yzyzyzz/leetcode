Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.


// 3.3
public class Solution {
    public int rob(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        if(nums.length < 2) return nums[0];
        // v1是抢第一个房子 v2是不抢
        int[] v1 = new int[nums.length + 1];
        int[] v2 = new int[nums.length + 1];
        v1[0] = 0;
        v2[0] = 0;
        v1[1] = nums[0];
        v2[1] = 0;
        for(int i = 2; i <= nums.length; i++) {
            v1[i] = Math.max(v1[i -2] + nums[i-1], v1[i -1]);
            v2[i] = Math.max(v2[i -2] + nums[i-1], v2[i -1]);
        }
        return Math.max(v1[nums.length - 1], v2[nums.length]);
    }
}

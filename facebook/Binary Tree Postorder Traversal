// 3.2
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        if(root == null) return res;
        TreeNode pre = null;
        Stack<TreeNode> s = new Stack<TreeNode>();
        s.push(root);
        while(!s.isEmpty()) {
            TreeNode cur = s.peek();
            if(pre == null || pre.left == cur || pre.right == cur) {
                if(cur.left != null) s.push(cur.left);
                else if(cur.right != null) s.push(cur.right);
            }
            else if(pre == cur.left && cur.right != null) {
                s.push(cur.right);
            }
            else {
                TreeNode t = s.pop();
                res.add(t.val);
            }
            pre = cur;
        }
        return res;
    }
}

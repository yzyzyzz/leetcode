Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.

For example,
123 -> "One Hundred Twenty Three"
12345 -> "Twelve Thousand Three Hundred Forty Five"
1234567 -> "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"


// 3.4
public class Solution {
    private final String[] LESS_THAN_20 = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    private final String[] TENS = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};

    public String numberToWords(int num) {
        if (num == 0) return  "Zero";
        return help(num);
    }

    public String help(int num) {
        String res = "";
        if (num < 20) res = LESS_THAN_20[num];
        else if (num < 100) res = TENS[num / 10] + " " + help(num % 10);
        else if (num < 1000) res = help(num / 100) + " Hundred " + help(num % 100);
        else if (num < 1000000) res = help(num / 1000) + " Thousand " + help(num % 1000);
        else if (num < 1000000000) res = help(num / 1000000) + " Million " + help(num % 1000000);
        else res = help(num / 1000000000) + " Billion " + help(num % 1000000000);
        
        return res.trim();
}
}

'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true

// 3.9
public class Solution {
    public boolean isMatch(String s, String p) {
        if(p.length() == 0) return s.length() == 0;
        else if(p.length() == 1 || p.charAt(1) != '*') {
            if(s.length() > 0 && (p.charAt(0) == s.charAt(0) || p.charAt(0) == '.')) 
                return isMatch(s.substring(1), p.substring(1));
            return false;    
        } else {
            // p一定是X*这种类型
            //  s:  abc  aac  
            //  p:  a*
            
            //  第一种情况 先把a*删掉 因为*可以表示0个 然后看a*后面和s是不是匹配
            if(isMatch(s, p.substring(2))) return true;
            int i = 0;
            while(i < s.length() && (s.charAt(i) == p.charAt(0) || p.charAt(0) == '.')) {
                if (isMatch(s.substring(i + 1), p.substring(2, p.length()))) {
                    return true;
                }
                i++;
            }
            return false;
        }
    }
}

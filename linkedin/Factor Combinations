Numbers can be regarded as product of its factors. For example,

8 = 2 x 2 x 2;
  = 2 x 4.
Write a function that takes an integer n and return all possible combinations of its factors.

Note: 
You may assume that n is always positive.
Factors should be greater than 1 and less than n.
Examples: 
input: 1
output: 
[]
input: 37
output: 
[]
input: 12
output:
[
  [2, 6],
  [2, 2, 3],
  [3, 4]
]

public class Solution {
    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> list = new ArrayList<Integer>();
        combine(res, list, n, 2);
        return res;
    }
    
    public void combine(List<List<Integer>> res, List<Integer> list, int n, int index) {
        if(n == 1) {
            // 排除第一个n，加入其他的下层的n
            if (list.size() > 1) res.add(new ArrayList(list));
            return;
        }
        for(int i = index; i <= Math.sqrt(n); i++) {
            if(n % i == 0) {
                list.add(i);
                combine(res, list, n / i, i);
                list.remove(list.size() - 1);
            } 
        }
        list.add(n);    //把n加进去
        combine(res, list, 1, n);
        list.remove(list.size() - 1);
    }
}

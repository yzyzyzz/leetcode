You need to find the largest value in each row of a binary tree.

Example:
Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        dfs(res, root, 0);
        return res;
    }
    
    public void dfs(List<Integer> res, TreeNode root, int level) {
        if(root == null) return;
        if(res.size() < level + 1) res.add(root.val);
        else res.set(level, Math.max(res.get(level), root.val));
        dfs(res, root.left, level + 1);
        dfs(res, root.right, level + 1);
    }
}

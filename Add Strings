Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.





// 3.1
public class Solution {
    public String addStrings(String num1, String num2) {
        char[] num11 = num1.toCharArray();
        char[] num22 = num2.toCharArray();
        int carry = 0;
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < num11.length || i < num22.length; i++)
        {
            int digit1 = i < num11.length ? num11[num11.length - i - 1] - '0' : 0;
            int digit2 = i < num22.length ? num22[num22.length - i - 1] - '0' : 0;
            int sum = digit1 + digit2 + carry;
            carry = sum / 10;
            sb.append(sum % 10);
        }
        if(carry != 0) sb.append(carry);
        return sb.reverse().toString();
    }
}

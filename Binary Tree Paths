Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]



// 3.1
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<String>();
        if (root == null) return res;
        path(res, String.valueOf(root.val), root);
        return res;
    }
    
    public void path(List<String> res, String s, TreeNode root) {
        if(root.left == null && root.right == null) {
            res.add(s);
            return;
        }
        if(root.left != null) path(res, s + "->" + root.left.val, root.left);
        if(root.right != null) path(res, s + "->" + root.right.val, root.right);
    }
}
